"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = void 0;
var graphql_tag_1 = require("graphql-tag");
exports.typeDefs = (0, graphql_tag_1.gql)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  enum TaskStatus {\n    NOT_STARTED\n    IN_PROGRESS\n    COMPLETED\n  }\n\n  enum UserRole {\n    ADMIN\n    MANAGER\n    USER\n  }\n\n  enum Priority {\n    LOW\n    MEDIUM\n    HIGH\n  }\n\n  type Task {\n    id: Int!\n    title: String!\n    description: String\n    status: TaskStatus!\n    dueDate: String\n    scheduledDate: String\n    completionDate: String\n    priority: Priority\n    isRecurring: Boolean\n    assignedTo: User\n    createdBy: User!\n    tenantId: String!\n    createdAt: String!\n    updatedAt: String!\n  }\n\n  type User {\n    id: Int!\n    name: String!\n    email: String!\n    role: UserRole!\n    tenantId: String!\n  }\n\n  type Query {\n    tasks(tenantId: String!): [Task!]!\n    task(id: Int!): Task\n    users(tenantId: String!): [User!]!\n    user(id: Int!): User\n  }\n\n  input CreateTaskInput {\n    title: String!\n    description: String\n    status: TaskStatus!\n    dueDate: String\n    scheduledDate: String\n    priority: Priority\n    isRecurring: Boolean\n    assignedToId: Int\n    tenantId: String!\n    createdById: Int!\n  }\n  \n  input UpdateTaskInput {\n    id: Int!\n    title: String\n    description: String\n    status: TaskStatus\n    dueDate: String\n    scheduledDate: String\n    completionDate: String\n    priority: Priority\n    isRecurring: Boolean\n    assignedToId: Int\n  }\n  \n  type Mutation {\n    createTask(input: CreateTaskInput!): Task!\n    updateTask(input: UpdateTaskInput!): Task!\n    deleteTask(id: Int!): Boolean!\n  }\n\n  type Subscription {\n    taskUpdated(tenantId: String!): Task!\n    taskCreated(tenantId: String!): Task!\n    taskDeleted(tenantId: String!): Int!\n  }\n"], ["\n  enum TaskStatus {\n    NOT_STARTED\n    IN_PROGRESS\n    COMPLETED\n  }\n\n  enum UserRole {\n    ADMIN\n    MANAGER\n    USER\n  }\n\n  enum Priority {\n    LOW\n    MEDIUM\n    HIGH\n  }\n\n  type Task {\n    id: Int!\n    title: String!\n    description: String\n    status: TaskStatus!\n    dueDate: String\n    scheduledDate: String\n    completionDate: String\n    priority: Priority\n    isRecurring: Boolean\n    assignedTo: User\n    createdBy: User!\n    tenantId: String!\n    createdAt: String!\n    updatedAt: String!\n  }\n\n  type User {\n    id: Int!\n    name: String!\n    email: String!\n    role: UserRole!\n    tenantId: String!\n  }\n\n  type Query {\n    tasks(tenantId: String!): [Task!]!\n    task(id: Int!): Task\n    users(tenantId: String!): [User!]!\n    user(id: Int!): User\n  }\n\n  input CreateTaskInput {\n    title: String!\n    description: String\n    status: TaskStatus!\n    dueDate: String\n    scheduledDate: String\n    priority: Priority\n    isRecurring: Boolean\n    assignedToId: Int\n    tenantId: String!\n    createdById: Int!\n  }\n  \n  input UpdateTaskInput {\n    id: Int!\n    title: String\n    description: String\n    status: TaskStatus\n    dueDate: String\n    scheduledDate: String\n    completionDate: String\n    priority: Priority\n    isRecurring: Boolean\n    assignedToId: Int\n  }\n  \n  type Mutation {\n    createTask(input: CreateTaskInput!): Task!\n    updateTask(input: UpdateTaskInput!): Task!\n    deleteTask(id: Int!): Boolean!\n  }\n\n  type Subscription {\n    taskUpdated(tenantId: String!): Task!\n    taskCreated(tenantId: String!): Task!\n    taskDeleted(tenantId: String!): Int!\n  }\n"])));
var templateObject_1;
